The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

imports the ``add_integer`` from the ``0-add_integer`` module:

	>>> add_integer = __import__('0-add_integer').add_integer

Now testing it:

    >>> add_integer(1, 2)
    3

	>>> add_integer(100, -2)
	98

	>>> add_integer(2)
	100

	>>> add_integer(100.3, -2)
	98

	>>> add_integer(100, 1.2)
	101

	>>> add_integer(-100.3, -2)
	-102

	>>> add_integer(4, 'School')
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> num = float("NaN")
	>>> add_integer(num)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> num = float("NaN")
	>>> add_integer(1, num)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer('a', 1)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(1,None)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer(1, float('inf'))
	1
	
